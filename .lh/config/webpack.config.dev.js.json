{
    "sourceFile": "config/webpack.config.dev.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1662269582477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1662269625121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,8 +66,9 @@\n               {\r\n                 test: /\\.styl$/,\r\n                 use: getStyleLoaders(\"stylus-loader\"),\r\n               },\r\n+              //图片\r\n               {\r\n                 test: /\\.(png|jpe?g|gif|svg)$/,\r\n                 type: \"asset\",\r\n                 parser: {\r\n"
                },
                {
                    "date": 1662270553121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,17 +3,17 @@\n  * @version: \r\n  * @Author: Leojias\r\n  * @Date: 2022-09-04 04:06:02\r\n  * @LastEditors: Leojias\r\n- * @LastEditTime: 2022-09-04 13:33:02\r\n+ * @LastEditTime: 2022-09-04 13:49:12\r\n  * \r\n  */\r\n const path = require(\"path\");\r\n const ESLintWebpackPlugin = require(\"eslint-webpack-plugin\");\r\n const HtmlWebpackPlugin = require(\"html-webpack-plugin\");\r\n const ReactRefreshWebpackPlugin = require(\"@pmmmwh/react-refresh-webpack-plugin\");\r\n const CopyPlugin = require(\"copy-webpack-plugin\");\r\n-//提取公共部分并做了postcss兼容\r\n+//提取公共部分style-loader和css-loader并做了postcss兼容\r\n const getStyleLoaders = (preProcessor) => {\r\n   return [\r\n     \"style-loader\",\r\n     \"css-loader\",\r\n@@ -21,9 +21,10 @@\n       loader: \"postcss-loader\",\r\n       options: {\r\n         postcssOptions: {\r\n           plugins: [\r\n-            \"postcss-preset-env\", // 能解决大多数样式兼容性问题\r\n+            // 在package.json里配置browserslist能解决大多数样式兼容性问题\r\n+            \"postcss-preset-env\", \r\n           ],\r\n         },\r\n       },\r\n     },\r\n"
                },
                {
                    "date": 1662270576858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n const ESLintWebpackPlugin = require(\"eslint-webpack-plugin\");\r\n const HtmlWebpackPlugin = require(\"html-webpack-plugin\");\r\n const ReactRefreshWebpackPlugin = require(\"@pmmmwh/react-refresh-webpack-plugin\");\r\n const CopyPlugin = require(\"copy-webpack-plugin\");\r\n+\r\n //提取公共部分style-loader和css-loader并做了postcss兼容\r\n const getStyleLoaders = (preProcessor) => {\r\n   return [\r\n     \"style-loader\",\r\n"
                },
                {
                    "date": 1662270685567,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n  * @version: \r\n  * @Author: Leojias\r\n  * @Date: 2022-09-04 04:06:02\r\n  * @LastEditors: Leojias\r\n- * @LastEditTime: 2022-09-04 13:49:12\r\n+ * @LastEditTime: 2022-09-04 13:51:25\r\n  * \r\n  */\r\n const path = require(\"path\");\r\n const ESLintWebpackPlugin = require(\"eslint-webpack-plugin\");\r\n@@ -72,8 +72,9 @@\n               //图片\r\n               {\r\n                 test: /\\.(png|jpe?g|gif|svg)$/,\r\n                 type: \"asset\",\r\n+                //对图片优化\r\n                 parser: {\r\n                   dataUrlCondition: {\r\n                     maxSize: 10 * 1024, // 小于10kb的图片会被base64处理\r\n                   },\r\n"
                },
                {
                    "date": 1662270735258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,8 +79,9 @@\n                     maxSize: 10 * 1024, // 小于10kb的图片会被base64处理\r\n                   },\r\n                 },\r\n               },\r\n+              //其他资源\r\n               {\r\n                 test: /\\.(ttf|woff2?)$/,\r\n                 type: \"asset/resource\",\r\n               },\r\n"
                },
                {
                    "date": 1662270796412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n  * @version: \r\n  * @Author: Leojias\r\n  * @Date: 2022-09-04 04:06:02\r\n  * @LastEditors: Leojias\r\n- * @LastEditTime: 2022-09-04 13:51:25\r\n+ * @LastEditTime: 2022-09-04 13:53:16\r\n  * \r\n  */\r\n const path = require(\"path\");\r\n const ESLintWebpackPlugin = require(\"eslint-webpack-plugin\");\r\n@@ -102,8 +102,9 @@\n           },\r\n         ],\r\n       },\r\n       plugins: [\r\n+        //eslint插件\r\n         new ESLintWebpackPlugin({\r\n           context: path.resolve(__dirname, \"../src\"),\r\n           exclude: \"node_modules\",\r\n           cache: true,\r\n"
                },
                {
                    "date": 1662270932434,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n  * @version: \r\n  * @Author: Leojias\r\n  * @Date: 2022-09-04 04:06:02\r\n  * @LastEditors: Leojias\r\n- * @LastEditTime: 2022-09-04 13:53:16\r\n+ * @LastEditTime: 2022-09-04 13:55:32\r\n  * \r\n  */\r\n const path = require(\"path\");\r\n const ESLintWebpackPlugin = require(\"eslint-webpack-plugin\");\r\n@@ -105,9 +105,11 @@\n       plugins: [\r\n         //eslint插件\r\n         new ESLintWebpackPlugin({\r\n           context: path.resolve(__dirname, \"../src\"),\r\n+          //排除node_module\r\n           exclude: \"node_modules\",\r\n+          //开启缓存\r\n           cache: true,\r\n           cacheLocation: path.resolve(\r\n             __dirname,\r\n             \"../node_modules/.cache/.eslintcache\"\r\n"
                },
                {
                    "date": 1662271128696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n  * @version: \r\n  * @Author: Leojias\r\n  * @Date: 2022-09-04 04:06:02\r\n  * @LastEditors: Leojias\r\n- * @LastEditTime: 2022-09-04 13:55:32\r\n+ * @LastEditTime: 2022-09-04 13:58:48\r\n  * \r\n  */\r\n const path = require(\"path\");\r\n const ESLintWebpackPlugin = require(\"eslint-webpack-plugin\");\r\n@@ -107,15 +107,16 @@\n         new ESLintWebpackPlugin({\r\n           context: path.resolve(__dirname, \"../src\"),\r\n           //排除node_module\r\n           exclude: \"node_modules\",\r\n-          //开启缓存\r\n+          //开启缓存让第二次打包更好\r\n           cache: true,\r\n           cacheLocation: path.resolve(\r\n             __dirname,\r\n             \"../node_modules/.cache/.eslintcache\"\r\n           ),\r\n         }),\r\n+        //html插件\r\n         new HtmlWebpackPlugin({\r\n           template: path.resolve(__dirname, \"../public/index.html\"),\r\n         }),\r\n         new ReactRefreshWebpackPlugin(), // 解决js的HMR功能运行时全局变量的问题\r\n"
                },
                {
                    "date": 1662271398459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n  * @version: \r\n  * @Author: Leojias\r\n  * @Date: 2022-09-04 04:06:02\r\n  * @LastEditors: Leojias\r\n- * @LastEditTime: 2022-09-04 13:58:48\r\n+ * @LastEditTime: 2022-09-04 14:03:18\r\n  * \r\n  */\r\n const path = require(\"path\");\r\n const ESLintWebpackPlugin = require(\"eslint-webpack-plugin\");\r\n@@ -84,14 +84,17 @@\n               {\r\n                 test: /\\.(ttf|woff2?)$/,\r\n                 type: \"asset/resource\",\r\n               },\r\n+              //babel-loader处理js\r\n               {\r\n                 test: /\\.(jsx|js)$/,\r\n                 include: path.resolve(__dirname, \"../src\"),\r\n                 loader: \"babel-loader\",\r\n                 options: {\r\n+                  //开启缓存\r\n                   cacheDirectory: true,\r\n+                  //不压缩\r\n                   cacheCompression: false,\r\n                   plugins: [\r\n                     // \"@babel/plugin-transform-runtime\", // presets中包含了\r\n                     \"react-refresh/babel\", // 开启js的HMR功能\r\n"
                },
                {
                    "date": 1662277855918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n  * @version: \r\n  * @Author: Leojias\r\n  * @Date: 2022-09-04 04:06:02\r\n  * @LastEditors: Leojias\r\n- * @LastEditTime: 2022-09-04 14:03:18\r\n+ * @LastEditTime: 2022-09-04 15:50:55\r\n  * \r\n  */\r\n const path = require(\"path\");\r\n const ESLintWebpackPlugin = require(\"eslint-webpack-plugin\");\r\n@@ -142,8 +142,9 @@\n             },\r\n           ],\r\n         }),\r\n       ],\r\n+      //分包\r\n       optimization: {\r\n         splitChunks: {\r\n           chunks: \"all\",\r\n         },\r\n"
                },
                {
                    "date": 1662278040522,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n  * @version: \r\n  * @Author: Leojias\r\n  * @Date: 2022-09-04 04:06:02\r\n  * @LastEditors: Leojias\r\n- * @LastEditTime: 2022-09-04 15:50:55\r\n+ * @LastEditTime: 2022-09-04 15:54:00\r\n  * \r\n  */\r\n const path = require(\"path\");\r\n const ESLintWebpackPlugin = require(\"eslint-webpack-plugin\");\r\n@@ -147,8 +147,9 @@\n       optimization: {\r\n         splitChunks: {\r\n           chunks: \"all\",\r\n         },\r\n+        //为了防止拆包失效\r\n         runtimeChunk: {\r\n           name: (entrypoint) => `runtime~${entrypoint.name}`,\r\n         },\r\n       },\r\n"
                },
                {
                    "date": 1662278116537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n  * @version: \r\n  * @Author: Leojias\r\n  * @Date: 2022-09-04 04:06:02\r\n  * @LastEditors: Leojias\r\n- * @LastEditTime: 2022-09-04 15:54:00\r\n+ * @LastEditTime: 2022-09-04 15:55:16\r\n  * \r\n  */\r\n const path = require(\"path\");\r\n const ESLintWebpackPlugin = require(\"eslint-webpack-plugin\");\r\n@@ -155,8 +155,9 @@\n       },\r\n       resolve: {\r\n         extensions: [\".jsx\", \".js\", \".json\"], // 自动补全文件扩展名，让jsx可以使用\r\n       },\r\n+      //热更新\r\n       devServer: {\r\n         open: true,\r\n         host: \"localhost\",\r\n         port: 3000,\r\n"
                }
            ],
            "date": 1662269582477,
            "name": "Commit-0",
            "content": "/*\r\n * @Descripttion: \r\n * @version: \r\n * @Author: Leojias\r\n * @Date: 2022-09-04 04:06:02\r\n * @LastEditors: Leojias\r\n * @LastEditTime: 2022-09-04 13:33:02\r\n * \r\n */\r\nconst path = require(\"path\");\r\nconst ESLintWebpackPlugin = require(\"eslint-webpack-plugin\");\r\nconst HtmlWebpackPlugin = require(\"html-webpack-plugin\");\r\nconst ReactRefreshWebpackPlugin = require(\"@pmmmwh/react-refresh-webpack-plugin\");\r\nconst CopyPlugin = require(\"copy-webpack-plugin\");\r\n//提取公共部分并做了postcss兼容\r\nconst getStyleLoaders = (preProcessor) => {\r\n  return [\r\n    \"style-loader\",\r\n    \"css-loader\",\r\n    {\r\n      loader: \"postcss-loader\",\r\n      options: {\r\n        postcssOptions: {\r\n          plugins: [\r\n            \"postcss-preset-env\", // 能解决大多数样式兼容性问题\r\n          ],\r\n        },\r\n      },\r\n    },\r\n    preProcessor,\r\n  ].filter(Boolean);\r\n};\r\nmodule.exports = {\r\n    entry: \"./src/main.js\",\r\n    output: {\r\n      path: undefined,\r\n      //入口文件目录\r\n      filename: \"static/js/[name].js\",\r\n      //打包chunk目录动态导入的语法\r\n      chunkFilename: \"static/js/[name].chunk.js\",\r\n      //图片的目录\r\n      assetModuleFilename: \"static/js/[hash:10][ext][query]\",\r\n\r\n    },\r\n    module: {\r\n        rules: [\r\n          {\r\n            oneOf: [\r\n              {\r\n                // 用来匹配 .css 结尾的文件\r\n                test: /\\.css$/,\r\n                // use 数组里面 Loader 执行顺序是从右到左\r\n                use: getStyleLoaders(),\r\n              },\r\n              //less\r\n              {\r\n                test: /\\.less$/,\r\n                use: getStyleLoaders(\"less-loader\"),\r\n              },\r\n              //sacc\r\n              {\r\n                test: /\\.s[ac]ss$/,\r\n                use: getStyleLoaders(\"sass-loader\"),\r\n              },\r\n              //style\r\n              {\r\n                test: /\\.styl$/,\r\n                use: getStyleLoaders(\"stylus-loader\"),\r\n              },\r\n              {\r\n                test: /\\.(png|jpe?g|gif|svg)$/,\r\n                type: \"asset\",\r\n                parser: {\r\n                  dataUrlCondition: {\r\n                    maxSize: 10 * 1024, // 小于10kb的图片会被base64处理\r\n                  },\r\n                },\r\n              },\r\n              {\r\n                test: /\\.(ttf|woff2?)$/,\r\n                type: \"asset/resource\",\r\n              },\r\n              {\r\n                test: /\\.(jsx|js)$/,\r\n                include: path.resolve(__dirname, \"../src\"),\r\n                loader: \"babel-loader\",\r\n                options: {\r\n                  cacheDirectory: true,\r\n                  cacheCompression: false,\r\n                  plugins: [\r\n                    // \"@babel/plugin-transform-runtime\", // presets中包含了\r\n                    \"react-refresh/babel\", // 开启js的HMR功能\r\n                  ],\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n      plugins: [\r\n        new ESLintWebpackPlugin({\r\n          context: path.resolve(__dirname, \"../src\"),\r\n          exclude: \"node_modules\",\r\n          cache: true,\r\n          cacheLocation: path.resolve(\r\n            __dirname,\r\n            \"../node_modules/.cache/.eslintcache\"\r\n          ),\r\n        }),\r\n        new HtmlWebpackPlugin({\r\n          template: path.resolve(__dirname, \"../public/index.html\"),\r\n        }),\r\n        new ReactRefreshWebpackPlugin(), // 解决js的HMR功能运行时全局变量的问题\r\n        // 将public下面的资源复制到dist目录去（除了index.html）\r\n        new CopyPlugin({\r\n          patterns: [\r\n            {\r\n              from: path.resolve(__dirname, \"../public\"),\r\n              to: path.resolve(__dirname, \"../dist\"),\r\n              toType: \"dir\",\r\n              noErrorOnMissing: true, // 不生成错误\r\n              globOptions: {\r\n                // 忽略文件\r\n                ignore: [\"**/index.html\"],\r\n              },\r\n              info: {\r\n                // 跳过terser压缩js\r\n                minimized: true,\r\n              },\r\n            },\r\n          ],\r\n        }),\r\n      ],\r\n      optimization: {\r\n        splitChunks: {\r\n          chunks: \"all\",\r\n        },\r\n        runtimeChunk: {\r\n          name: (entrypoint) => `runtime~${entrypoint.name}`,\r\n        },\r\n      },\r\n      resolve: {\r\n        extensions: [\".jsx\", \".js\", \".json\"], // 自动补全文件扩展名，让jsx可以使用\r\n      },\r\n      devServer: {\r\n        open: true,\r\n        host: \"localhost\",\r\n        port: 3000,\r\n        hot: true,\r\n        compress: true,\r\n        historyApiFallback: true, // 解决react-router刷新404问题\r\n      },\r\n      mode: \"development\",\r\n      devtool: \"cheap-module-source-map\",\r\n}"
        }
    ]
}